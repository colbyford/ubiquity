% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ubiquity.R
\name{system_check_steady_state}
\alias{system_check_steady_state}
\title{Verify System steady-state}
\usage{
system_check_steady_state(cfg, parameters = NULL, zero_rates = TRUE,
  zero_bolus = TRUE, output_times = seq(0, 100, 1),
  offset_tol = .Machine$double.eps * 100,
  derivative_tol = .Machine$double.eps * 100, derivative_time = 0)
}
\arguments{
\item{cfg}{ubiquity system object}

\item{zero_rates}{Boolean value to control removing all rate inputs (\code{TRUE})}

\item{zero_bolus}{Boolean value to control removing all bolus inputs (\code{TRUE})}

\item{output_times}{sequence of output times to simulate for offset determination (\code{seq(0,100,1)})}

\item{offset_tol}{maximum percent offset to be considered zero (\code{.Machine$double.eps*100})}

\item{derivative_tol}{maximum derivative value to be considered zero (\code{.Machine$double.eps*100})}

\item{derivative_time}{time to evaluate derivatives to identify deviations, set to \code{NULL} to skip derivative evaluation}
}
\value{
list with name \code{steady_state} (boolean indicating weather the system was at steady state) and \code{states} a vector of states that have steady state offset.
}
\description{
Takes the system system object and other optional inputs to verify the system is running at steady state. This also provides information that can be helpful in debugging systems not running at steady state.
}
